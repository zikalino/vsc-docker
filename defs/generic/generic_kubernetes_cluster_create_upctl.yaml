#--------------------------------------------------------------------------------------------------------------
# Autogenerated by SmarterGen - do not modify this file.
#--------------------------------------------------------------------------------------------------------------
# Create a Kubernetes cluster
# 
# Usage:
# upctl kubernetes create [flags]
# 
# Examples:
# upctl kubernetes create \
# 				--name my-cluster \
# 				--network 03e5ca07-f36c-4957-a676-e001e40441eb \
# 				--node-group count=2,name=my-minimal-node-group,plan=2xCPU-4GB, \
# 				--zone de-fra1
# upctl kubernetes create \
# 				--name my-cluster \
# 				--plan production-small \
# 				--network 03e5ca07-f36c-4957-a676-e001e40441eb \
# 				--node-group count=4,kubelet-arg="log-flush-frequency=5s",label="owner=devteam",label="env=dev",name=my-node-group,plan=4xCPU-8GB,ssh-key="ssh-ed25519 AAAAo admin@user.com",ssh-key="/path/to/your/public/ssh/key.pub",storage=01000000-0000-4000-8000-000160010100,taint="env=dev:NoSchedule",taint="env=dev2:NoSchedule" \
# 				--zone de-fra1
# 
# Options:
#   --name string                           Kubernetes cluster name.                                                                            
#                                                                                                                                           
#   --label stringArray                     Labels to describe the cluster in `key=value` format, multiple can be declared.                     
#                                                                                                                                           
#   --plan string                           Plan to use for the cluster. Run `upctl kubernetes plans` to list all available plans.              
#                                           Default: development                                                                                
#                                                                                                                                           
#   --version string                        Identifier of the version of Kubernetes to use when creating the cluster. Run `upctl kubernetes     
#                                           versions` to list all available versions.                                                           
#                                                                                                                                           
#   --network string                        Network to use. The value should be name or UUID of a private network.                              
#                                                                                                                                           
#   --node-group stringArray                Node group(s) for running workloads, multiple can be declared. Usage: `--node-group                 
#                                           count=8,kubelet-arg="log-flush-frequency=5s",label="owner=devteam",label="env=dev",name=my-node-grou
#                                           p,plan=2xCPU-4GB,ssh-key="ssh-ed25519 AAAAo                                                         
#                                           admin@user.com",ssh-key="/path/to/your/public/ssh/key.pub",storage=01000000-0000-4000-8000-000160010
#                                           100,taint="env=dev:NoSchedule",taint="env=dev2:NoSchedule"`                                         
#                                                                                                                                           
#   --kubernetes-api-allow-ip stringArray   Allow cluster's Kubernetes API to be accessed from an IP address or a network CIDR, multiple can be 
#                                           declared.                                                                                           
#                                                                                                                                           
#   --private-node-groups                   Do not assign public IPs to worker nodes. If set, the attached network should have a NAT gateway    
#                                           configured to provide internet access to the worker nodes.                                          
#                                                                                                                                           
#   --zone string                           Zone where to create the cluster. Run `upctl zone list` to list all available zones.                
#                                                                                                                                           
#   --wait                                  Wait for cluster to be in running state before returning.                                           
# 
# Global Options:
#   -t, --client-timeout duration   Client timeout to use in API calls.                                                                 
#                                   Default: 0s                                                                                         
#                                                                                                                                   
#   --config string                 Configuration file path.                                                                            
#                                                                                                                                   
#   --debug bool                    Print out more verbose debug logs.                                                                  
#                                   Default: false                                                                                      
#                                                                                                                                   
#   --force-colours                 Force coloured output despite detected terminal support.                                            
#                                                                                                                                   
#   --no-colours                    Disable coloured output despite detected terminal support. Colours can also be disabled by setting  
#                                   NO_COLOR environment variable.                                                                      
#                                                                                                                                   
#   -o, --output string             Output format (supported: json, yaml and human)                                                     
#                                   Default: human                                                                                      
# 

- type: section
  title: Basic Information
  subitems:
    - $include: upctl/__upctl_network_list_selector.yaml
    - type: row
      subitems: 
        - type: textfield
          name: name
          description: Kubernetes cluster name. 
          produces: 
            - variable: name
    - type: row
      subitems: 
        - type: textfield
          name: label
          description: Labels to describe the cluster in `key=value` format, multiple can be declared. 
          produces: 
            - variable: label
    - $include: upctl/__upctl_kubernetes_plans_selector.yaml
    - $include: upctl/__upctl_kubernetes_versions_selector.yaml
    - type: row
      subitems: 
        - type: textfield
          name: node-group
          description: "Node group(s) for running workloads, multiple can be declared. Usage: `--node-group count=8,kubelet-arg=\"log-flush-frequency=5s\",label=\"owner=devteam\",label=\"env=dev\",name=my-node-grou p,plan=2xCPU-4GB,ssh-key=\"ssh-ed25519 AAAAo admin@user.com\",ssh-key=\"/path/to/your/public/ssh/key.pub\",storage=01000000-0000-4000-8000-000160010 100,taint=\"env=dev:NoSchedule\",taint=\"env=dev2:NoSchedule\"` "
          produces: 
            - variable: node_group
    - type: row
      subitems: 
        - type: textfield
          name: kubernetes-api-allow-ip
          description: Allow cluster's Kubernetes API to be accessed from an IP address or a network CIDR, multiple can be declared. 
          produces: 
            - variable: kubernetes_api_allow_ip

- type: section
  title: Image / Application
  subitems:
    - type: separator

- type: section
  title: Other
  subitems:
    - type: row
      subitems: 
        - type: checkbox
          name: private-node-groups
          description: Do not assign public IPs to worker nodes. If set, the attached network should have a NAT gateway configured to provide internet access to the worker nodes. 
          val-false: false
          produces: 
            - variable: private_node_groups
    - $include: upctl/__upctl_zone_list_selector.yaml
    - type: row
      subitems: 
        - type: checkbox
          name: wait
          description: Wait for cluster to be in running state before returning. 
          val-false: false
          produces: 
            - variable: wait

- type: section
  subitems:
    - type: 'action-row'
      expandable: false
      name: upctl kubernetes create
      consumes:
        - variable: network
          parameter: --network
          required: true
        - variable: name
          parameter: --name
          required: false
        - variable: label
          parameter: --label
          required: false
        - variable: kubernetes_plan
          parameter: --plan
          required: false
        - variable: version
          parameter: --version
          required: false
        - variable: node_group
          parameter: --node-group
          required: false
        - variable: kubernetes_api_allow_ip
          parameter: --kubernetes-api-allow-ip
          required: false
        - variable: private_node_groups
          parameter: --private-node-groups
          required: false
        - variable: zone
          parameter: --zone
          required: false
        - variable: wait
          parameter: --wait
          required: false
      install: upctl kubernetes create
      verify: upctl kubernetes show ${name}
      produces:
        - variable: output
