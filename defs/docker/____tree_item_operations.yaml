#
# prune images
#
- type: delete
  item-types:
    - docker-image-list
  name: Prune dangling images
  cmd: docker image prune
  behavior: interactive
  refresh: self

#
# load image
#
#- type: load
#  item-types:
#    - docker-image-list
#  name: Load image from tar file
#  behavior: interactive
#  additional-input:
#    type: filename
#    pattern: *.tar
#    variable: filename
#  cmd: docker image load --input ${filename}
#  refresh: self

#
# import image
#
#- type: load
#  item-types:
#    - docker-image-list
#  name: Import image from tar file
#  behavior: interactive
#  additional-input:
#    type: filename
#    pattern: *.tar
#    variable: filename
#  cmd: docker image import --input ${filename}
#  refresh: self

#
# push image
#
- type: load
  item-types:
    - docker-image
  name: Push image to the repository
  behavior: interactive
  cmd: docker image push ${repo_tag}
  refresh: none

#
# pull image
#
- type: load
  item-types:
    - docker-image
  name: Pull newers version of the image from the repository
  behavior: interactive
  cmd: docker image pull ${repo_tag}
  refresh: self

#
# docker run
#
- type: terminal
  item-types:
    - docker-image
  name: Create container from this image
  cmd: docker run -it ${id} 
  terminal: c${id}
  # behavior could be: non-interactive, interactive, interactive-no-wait 
  behavior: interactive-no-wait
  # we specify template as well, so the user will have 2 options
  template:
    name: docker/docker_run.yaml
    parameters:
      image_id: ${id}
  refresh: none

#
# delete image
#
- type: delete
  item-types:
    - docker-image
  name: Delete
  cmd: docker image remove ${id}
  refresh: parent

#
# save image
#
- type: save
  item-types:
    - docker-image
  name: Save to tar file
  behavior: interactive
  cmd: docker image save ${id} --output ${id}.tar
  refresh: none

#
# prune containers
#
- type: delete
  item-types:
    - docker-container-list
  name: Prune stopped containers
  cmd: docker container prune
  behavior: interactive
  refresh: self

#
# attach to container
#
- type: terminal
  item-types:
    - docker-container
  name: Attach to terminal
  cmd: docker attach ${id}
  terminal: c${namex}
  # behavior could be: non-interactive, interactive, interactive-no-wait 
  behavior: interactive-no-wait
  refresh: none

#
# delete container
#
- type: delete
  item-types:
    - docker-container
  name: Delete
  cmd: docker container remove ${id}
  refresh: parent


#
# start container
#
- type: start
  item-types:
    - docker-container
  name: Start
  cmd: docker container start ${id}
  refresh: self
  when:
    path: $.State
    value: exited

#
# stop container
#
- type: stop
  item-types:
    - docker-container
  name: Stop
  cmd: docker container stop ${id}
  refresh: self
  when:
    path: $.State
    value: running

#
# pause container
#
- type: pause
  item-types:
    - docker-container
  name: Pause
  cmd: docker container pause ${id}
  refresh: self
  when:
    path: $.State
    value: running

#
# unpause container
#
- type: unpause
  item-types:
    - docker-container
  name: Unpause
  cmd: docker container unpause ${id}
  refresh: self
  when:
    path: $.State
    value: paused

#
# restart container
#
- type: restart
  item-types:
    - docker-container
  name: Restart
  cmd: docker container restart ${id}
  refresh: self

#
# export container
#
- type: save
  item-types:
    - docker-container
  name: Export to tar file
  behavior: interactive
  cmd: docker container export ${id} --output ${id}.tar
  refresh: none

#
# docker exec
#
- type: terminal
  item-types:
    - docker-container
  name: Execute Command in Container
  cmd: abc
  template:
    name: docker/docker_exec.yaml
    parameters:
      container_id: ${id}
  refresh: none
